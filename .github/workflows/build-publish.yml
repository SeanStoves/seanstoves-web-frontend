name: Build and Deploy to Live Environment

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '.github/**'

jobs:
  #######
  #   Clean up old Artifacts
  #######
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 hour'

  #######
  #   Build the Artifact
  #     TODO: Add Testing to this process
  #######
  build:
    needs: cleanup
    runs-on: ubuntu-latest
    container: node:lts
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build
      - name: Upload Next build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .next
            public
          retention-days: 1

  #######
  #   Publish to Private Docker Registry
  #######
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download next build
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and Push Docker Images
        run: |
          export CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
          export TAG=$([[ $CURRENT_BRANCH == "main" ]] && echo "latest" || echo $CURRENT_BRANCH)
          export GITHUB_REF_IMAGE=${{ secrets.REGISTRY_URL }}/seanstoves_web_frontend:$GITHUB_SHA
          export GITHUB_BRANCH_IMAGE=${{ secrets.REGISTRY_URL }}/seanstoves_web_frontend:$TAG
          docker build -t seanstoves_web_frontend -t $GITHUB_REF_IMAGE -t $GITHUB_BRANCH_IMAGE .
          echo "Pushing Image to Chaotic Logic Container Registry"
          docker push $GITHUB_BRANCH_IMAGE

  #######
  #   Deploy via Portainer API
  #######
  deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Update Portainer Container
        run: |
          API_URI="https://panel.chaoticlogic.us"
          CONTAINER_ID="SeanStoves-Web-Frontend"
          ENDPOINT_URI="1"
          echo "Getting Auth Token"
          AUTH_TOKEN=`curl -X POST $API_URI/api/auth -H "Content-Type: application/json" -d "{\"Username\": \"${{ secrets.PORTAINER_USER}}\", \"Password\": \"${{ secrets.PORTAINER_PASSWORD}}\"}" | jq -r ".jwt" | tr -d "\n"`
          echo "Update chaosbot:latest image"
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/endpoints/$ENDPOINT_URI/docker/images/create?fromImage=registry.chaoticlogic.us%2Fseanstoves_web_frontend:latest" -H "X-Registry-Auth: eyJzZXJ2ZXJhZGRyZXNzIjoicmVnaXN0cnkuY2hhb3RpY2xvZ2ljLnVzIn0=" --data-raw "{\"fromImage\":\"registry.chaoticlogic.us/seanstoves_web_frontend:latest\"}"
          echo "Stopping Old Container"
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/endpoints/$ENDPOINT_URI/docker/containers/$CONTAINER_ID/stop" --data-raw "{}"
          echo "Renaming old Container"
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/endpoints/$ENDPOINT_URI/docker/containers/$CONTAINER_ID/rename?name=%2F$CONTAINER_ID-old" --data-raw "{}"
          echo "Create new container"
          CONTAINER_CREATION_RESPONSE=`curl -H "Content-Type: application/json" -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/endpoints/$ENDPOINT_URI/docker/containers/create?name=$CONTAINER_ID" --data-raw "{\"Cmd\":[\"/bin/sh\",\"-c\",\"npm start\"],\"Entrypoint\":[\"docker-entrypoint.sh\"],\"Env\":[\"GOOGLE_ID=${{ secrets.GOOGLE_ID}}\",\"GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET}}\",\"NEXTAUTH_URL=https://www.seanstoves.com\",\"SECRET=${{ secrets.SITE_SECRET}}\"],\"Image\":\"registry.chaoticlogic.us/seanstoves_web_frontend:latest\",\"Labels\":{},\"OnBuild\":null,\"OpenStdin\":false,\"StdinOnce\":false,\"Tty\":false,\"User\":\"\",\"WorkingDir\":\"/home/node/app\",\"HostConfig\":{\"AutoRemove\":false,\"RestartPolicy\":{\"MaximumRetryCount\":0,\"Name\":\"unless-stopped\"}},\"name\":\"$CONTAINER_ID\",\"ExposedPorts\":{\"3000/tcp\":{}},\"NetworkingConfig\":{\"EndpointsConfig\":{\"nginx\":{\"IPAMConfig\":{\"IPv4Address\":\"172.18.0.3\"},\"IPAddress\":\"172.18.0.3\"}}}}"`
          echo "Starting Container"
          curl -H "Content-Type: application/json" -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/endpoints/$ENDPOINT_URI/docker/containers/$CONTAINER_ID/start" --data-raw "{}"
          echo "Get Resource Control ID"
          NEW_RESOURCE_CONTROL_ID=`echo $CONTAINER_CREATION_RESPONSE | jq -r ".Portainer.ResourceControl.Id"`
          echo "Lock down new container"
          curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/resource_controls/$NEW_RESOURCE_CONTROL_ID" --data-raw "{\"AdministratorsOnly\":true,\"Public\":false,\"Users\":[],\"Teams\":[]}"
          echo "Delete old container"
          curl -X DELETE -H "Authorization: Bearer $AUTH_TOKEN" "$API_URI/api/endpoints/$ENDPOINT_URI/docker/containers/$CONTAINER_ID-old?force=true&v=1"
